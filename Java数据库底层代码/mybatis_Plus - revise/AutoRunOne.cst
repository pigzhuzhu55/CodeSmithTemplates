<%-- 
Name:
Author: 
Description: 
--%>

<%@ Register Name="Bean" Template="Bean.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Dao" Template="Dao.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Mapper" Template="Mapper.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Service" Template="Service.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ServiceImpl" Template="ServiceImpl.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Controller" Template="Controller.cst" MergeProperties="False" ExcludeProperties="" %>

<%--<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." ResponseEncoding="utf-8" %>--%>
<%@ Template Language="C#" TargetLanguage="Java" Encoding="UTF-8" ResponseEncoding="UTF-8"%>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Property Name="OutPutModelDest" Type="String" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text" %>
<%


bool cover = false;

CodeTemplate codeTemplate1=new Bean();
codeTemplate1.SetProperty("SourceTable",SourceTable);
codeTemplate1.SetProperty("Package",Package);
codeTemplate1.SetProperty("Prefix",Prefix);
string fileName = OutPutModelDest+@"entity\"+GetClassName(SourceTable)+".java";
codeTemplate1.RenderToFile(fileName,true);
rendJavaFile(fileName);

try{
CodeTemplate codeTemplate2=new Service();
codeTemplate2.SetProperty("SourceTable",SourceTable);
codeTemplate2.SetProperty("Package",Package);
codeTemplate2.SetProperty("Prefix",Prefix);
string fileName2 = OutPutModelDest+@"service\"+GetClassName(SourceTable)+"Service.java";
codeTemplate2.RenderToFile(fileName2,cover);
rendJavaFile(fileName2);
}
catch{
}


try{
CodeTemplate codeTemplate3=new Mapper();
codeTemplate3.SetProperty("SourceTable",SourceTable);
codeTemplate3.SetProperty("Package",Package);
codeTemplate3.SetProperty("Prefix",Prefix);
string fileName3 = OutPutModelDest+@"dao\mapper\"+GetClassName(SourceTable)+"Mapper.java";
codeTemplate3.RenderToFile(fileName3,cover);
rendJavaFile(fileName3);
}
catch{
}

try{
CodeTemplate codeTemplate4=new ServiceImpl();
codeTemplate4.SetProperty("SourceTable",SourceTable);
codeTemplate4.SetProperty("Package",Package);
codeTemplate4.SetProperty("Prefix",Prefix);
string fileName4 = OutPutModelDest+@"service\impl\"+GetClassName(SourceTable)+"ServiceImpl.java";
codeTemplate4.RenderToFile(fileName4,cover);
rendJavaFile(fileName4);
}
catch{
}

try{
CodeTemplate codeTemplate5=new Dao();
codeTemplate5.SetProperty("SourceTable",SourceTable);
codeTemplate5.SetProperty("Package",Package);
codeTemplate5.SetProperty("Prefix",Prefix);
string fileName5 = OutPutModelDest+@"dao\"+GetClassName(SourceTable)+"Dao.java";
codeTemplate5.RenderToFile(fileName5,cover);
rendJavaFile(fileName5);
}
catch{
}


try{
CodeTemplate codeTemplate6=new Controller();
codeTemplate6.SetProperty("SourceTable",SourceTable);
codeTemplate6.SetProperty("Package",Package);
codeTemplate6.SetProperty("Prefix",Prefix);
string controllerName = GetClassName(SourceTable); 
if (controllerName.StartsWith("Tb"))
	controllerName = controllerName.Substring(Prefix.Length);
string fileName6 = OutPutModelDest+@"\..\..\..\..\..\..\..\..\..\mall-revise-api\src\main\java\com\iqeq\mall\revise\api\controller\"+controllerName+"Controller.java";
codeTemplate6.RenderToFile(fileName6,cover);
rendJavaFile(fileName6);
}
catch{
}


%>
<script runat="template">
private void rendJavaFile(string fileName){
    string content=string.Empty;
    using (var sr = new StreamReader(fileName, Encoding.UTF8))
    {
        content= sr.ReadToEnd();
    }

    using(FileStream fs = new FileStream(fileName, FileMode.Create)){
        using(StreamWriter sw = new StreamWriter(fs, new System.Text.UTF8Encoding(false))){
            sw.Write(content);
            //清空缓冲区
            sw.Flush();
        }
    }
}
</script>
<!-- #include file="script.inc" -->