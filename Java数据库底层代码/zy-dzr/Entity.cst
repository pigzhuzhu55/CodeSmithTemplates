<%@ Template Language="C#" TargetLanguage="Java" Encoding="UTF-8" ResponseEncoding="UTF-8"%>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="System.Collections" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Collections" %>
package <%=Package%>.pojo.entity;

import cn.hutool.core.date.DatePattern;
import com.alibaba.fastjson.annotation.JSONField;
import com.baomidou.mybatisplus.annotation.*;
import com.cly.mp.entity.BaseEntity;
import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import java.util.Date;
import java.io.Serializable;
import lombok.EqualsAndHashCode;


/**
 *Name: <%=SourceTable.Description%> 数据库实体对象
 *Author: Caicai
 *Date: <%= DateTime.Now.ToString("yyyy-MM-dd") %>
 *Description: <%= String.Format("Copyright {0} CCai", DateTime.Now.ToString("yyyy")) %>
 */ 

<script runat="template">
//主键类型[目前不支持联合主键]
ArrayList pkList = new ArrayList();
ArrayList allList = new ArrayList();

</script>
@Data
@EqualsAndHashCode(callSuper = true)
@TableName("<%= SourceTable.Name%>")
@ApiModel(value="<%= GetClassName(SourceTable)%>对象", description="<%= SourceTable.Description%>")
public class <%= GetClassName(SourceTable) %> extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;
	<%
    for (int i = 0; i < SourceTable.Columns.Count; i++) { 
        ColumnSchema column = SourceTable.Columns[i];
        if(i==0){
            pkList.Add(column);
            continue;
        }
        
        allList.Add(column);
        
    }
    %>
    
    <%
    for (int i = 0; i < pkList.Count; i++) { 
    ColumnSchema column = (ColumnSchema)pkList[i];
    string type = GetCSharpVariableType(column);
    %>
    <% if (!String.IsNullOrEmpty(column.Description)){%>
    @ApiModelProperty(name = "<%= GetCamelCaseName(column.Name) %>", value = "<%= FilterString(column.Description)%>")
    <%}%>
    @TableId(value = "<%=column.Name%>",type = IdType.AUTO)
    private <%= GetCSharpVariableType(column) %> <%= GetCamelCaseName(column.Name) %>;
    <% if (i < allList.Count - 1) Response.Write("\r\n"); %>
    <%
    }
    %>
    <%
    for (int i = 0; i < allList.Count; i++) { 
    ColumnSchema column = (ColumnSchema)allList[i];
    string type = GetCSharpVariableType(column);
    %>
    <% if (!String.IsNullOrEmpty(column.Description)){%>
    @ApiModelProperty(name = "<%= GetCamelCaseName(column.Name) %>", value = "<%= FilterString(column.Description)%>")
    <%}%>
    <% if (type=="Date"){%>
    @JSONField(format=DatePattern.NORM_DATETIME_PATTERN)
    @JsonFormat(shape = JsonFormat.Shape.STRING,timezone = "GMT+8", pattern = DatePattern.NORM_DATETIME_PATTERN,locale = "zh_CN")
    <%}%>
    <% if (column.Name.IndexOf("create_")==0){%>
    @TableField(value = "<%=column.Name%>",fill = FieldFill.INSERT)
    <%}else if(column.Name.IndexOf("update_")==0){%>
    @TableField(value = "<%=column.Name%>",fill = FieldFill.UPDATE)
    <%}else {%>
    @TableField(value = "<%=column.Name%>")
    <%}%>
    <% if (column.Name=="del_flag"){%>
    @TableLogic
    <%}%>
    private <%= GetCSharpVariableType(column) %> <%= GetCamelCaseName(column.Name) %>;
    <% if (i < allList.Count - 1) Response.Write("\r\n"); %>
    <%
    }
    %>
}
 
<!-- #include file="script.inc" -->